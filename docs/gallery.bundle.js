(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{4:function(e,t,n){"use strict";n.r(t);var s=n(0),i=n(2),r=function(){function e(e){this.DEF_WIDTH=5,this.DEF_HEIGHT=5,this.texture=(new i.TextureLoader).load(e.img),this.link=e.link}return e.prototype.init=function(){var e=new i.PlaneGeometry(this.DEF_WIDTH,this.DEF_HEIGHT),t=new i.MeshBasicMaterial({map:this.texture,depthWrite:!1,alphaTest:.5}),n=new i.Mesh(e,t);return n.link=this.link,n},e}(),a=function(){function e(){this.meshes=[],this.usedMeshes=[]}return e.prototype.init=function(){return s.a(this,void 0,void 0,function(){var e,t=this;return s.b(this,function(s){switch(s.label){case 0:return[4,n.e(1).then(n.bind(null,3))];case 1:return e=s.sent(),this.data=e.data,this.data.forEach(function(e){var n=new r(e).init();n.scale.set(1e-6,1e-6,1e-6),t.meshes.push(n)}),[2]}})})},e.prototype.render=function(){return s.a(this,void 0,void 0,function(){var e;return s.b(this,function(t){return 0===this.meshes.length&&(this.meshes=this.usedMeshes.slice(),this.usedMeshes=[]),e=this.meshes.shift(),this.usedMeshes.push(e),[2,e]})})},e.prototype.hide=function(e){var t=this;return new Promise(function(n){t.animateScale(e).then(function(){n(e)})})},e.prototype.animateScale=function(e){return new Promise(function(t){var n=new i.Clock,s=e.scale.x-1,r=-e.scale.x,a=function(){var i=n.getElapsedTime(),h=i/.8;if(i>=.8){t(!0),n=null;var u=Math.abs(s);e.scale.set(u,u,1e-6)}else{var o=Math.abs(r+h);e.scale.set(o,o,1e-6),requestAnimationFrame(a)}};a()})},e}();t.default=a}}]);
//# sourceMappingURL=gallery.bundle.js.map